{
  "workbench.colorTheme": "Dracula",
  "window.zoomLevel": 0,
  "workbench.editor.highlightModifiedTabs": true,
  "explorer.sortOrder": "type",
  "files.trimFinalNewlines": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  // Terminal Settings
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.fontFamily": "MesloLGS NF",
  "terminal.integrated.rendererType": "dom",
  // Editor Settings
  "editor.fontSize": 12,
  "editor.mouseWheelZoom": true,
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [80],
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.fontFamily": "Fira Code",
  "editor.fontLigatures": true,
  "editor.lineNumbers": "relative",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.tabSize": 2,
  "editor.minimap.enabled": false,
  "editor.cursorBlinking": "solid",
  "editor.suggestSelection": "first",
  // Formatter
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "prettier.tabWidth": 2,
  "files.autoSave": "onFocusChange",
  // Vim Settings
  "vim.leader": "<Space>",
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  // Bind ZZ to the vim command :wq (save and close the current file)
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["Z", "Z"],
      "commands": [":wq"]
    },
    // Bind <leader>m to add a bookmark and <leader>b to open the list of all bookmarks (using the Bookmarks extension)
    {
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "b"],
      "commands": ["bookmarks.list"]
    },
    // <leader>/ to turn off search highlighting
    {
      "before": ["leader", "/"],
      "commands": [":nohl"]
    },
    {
      "before": ["leader", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["<Leader>", "j"],
      "after": ["J"]
    },
    {
      "before": ["<C-h>"],
      "after": ["<C-w>", "h"]
    },
    {
      "before": ["<C-j>"],
      "after": ["<C-w>", "j"]
    },
    {
      "before": ["<C-k>"],
      "after": ["<C-w>", "k"]
    },
    {
      "before": ["<C-l>"],
      "after": ["<C-w>", "l"]
    },
    {
      "before": ["<Leader>", "t", "t"],
      "commands": [":tabnew"]
    },
    {
      "before": ["<Leader>", "t", "n"],
      "commands": [":tabnext"]
    },
    {
      "before": ["<Leader>", "t", "p"],
      "commands": [":tabprev"]
    },
    {
      "before": ["<Leader>", "t", "o"],
      "commands": [":tabo"]
    },
    {
      "before": ["<Leader>", "c"],
      "commands": ["workbench.action.showCommands"]
    },
    // Bind <leader>y to yank to system clipboard
    {
      "before": ["<leader>", "y"],
      "after": ["\"", "*", "y"]
    },
    // Bind <leader>p to paste from system clipboard
    {
      "before": ["<Leader>", "p"],
      "after": ["\"", "*", "p"]
    },
    {
      "before": ["<Leader>", "t"],
      "commands": ["workbench.action.gotoSymbol"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Bind <leader>y to yank to system clipboard in visual mode
    {
      "before": ["<leader>", "y"],
      "after": ["\"", "*", "y"]
    },
    // Bind <leader>p to paste from system clipboard in visual mode
    {
      "before": ["<Leader>", "p"],
      "after": ["\"", "*", "p"]
    },
    // Bind p in visual mode to paste without overriding the current register
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    },
    // Bind > and < in visual mode to indent/outdent lines (repeatable)
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "vim.easymotion": true,
  "vim.hlsearch": true,
  "vim.enableNeovim": true,
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.gdefault": true,
  "vim.sneak": true,
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false
}
